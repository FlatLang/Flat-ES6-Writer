package flat/writer/es6

import novex/nest/TestResult

import flat/time/Timer
import flat/io/FancyOutputStream
import flat/writer/es6/Es6Writer

[TestSuite [
  Es6Writer_Test
]]
class {
  public static async main(String[] args) {
    let test = Es6Writer_TestSuite()

    Timer timer = Timer().start()

    let results = TestResult[]

    test.runTests({
      results.add(_)
    })

    let fancy = FancyOutputStream(headerPattern: "/\\")

    let unsuccessful = results.filter({ !_.success })

    if (unsuccessful.count > 0) {
      fancy.writeHeader(
        "#unsuccessful.count Failure#{unsuccessful.count == 1 ? "" : "s"} out of #results.count test#{results.count == 1 ? "" : "s"}",
        pattern: ":'( ",
        symmetrical: true
      )

      unsuccessful.forEach({
        Console.log("#_")
      })
    } else {
      fancy.writeHeader(
        "All #results.count Successful",
        pattern: ":) ",
        symmetrical: true
      )
    }

    timer.stop()

    Console.writeLine("Took #{timer.duration}ms")

    if (unsuccessful.count > 0) {
        System.exit(1)
    }
  }
}
